syntax="proto3";

package dataform;

option java_package = "com.dataform.protos";
option java_outer_classname = "CoreMeta";
option java_multiple_files = true;

option go_package = "github.com/dataform-co/dataform/protos/dataform";

message ProjectConfig {
  string warehouse = 1;

  string default_database = 9;
  string default_schema = 2;
  string assertion_schema = 5;

  map<string, string> vars = 14;

  int32 concurrent_query_limit = 13;
  int32 idempotent_action_retries = 8;

  string database_suffix = 15;
  string schema_suffix = 7;
  string table_prefix = 11;
  
  bool use_run_cache = 10;

  // Deprecated. Please use 'default_database' instead.
  string gcloud_project_id = 6;

  reserved 3, 4, 12;
}

message Environments {
  message Environment {
    string name = 1;
    
    message GitReference {
      oneof git_reference {
        string branch = 1;
        string commit_sha = 2;
      }
    }
  
    oneof git_settings {
      string git_ref = 5;
      // Deprecated. Please use 'git_ref' instead.
      GitReference git_reference = 2;
    }

    ProjectConfig config_override = 3;

    message Schedule {
      // Required fields.
      string name = 1;
      string cron = 2;
      repeated string tags = 3;
  
      // This is a subset of RunConfig.
      message Options {
        bool include_dependencies = 4;
        bool include_dependents = 6;
        bool full_refresh = 5;
      }
      // Optional.
      Options options = 4;
      bool disabled = 5;
  
      message NotificationRequirement {
        string channel = 1;
  
        enum CompletionStatus {
          UNKNOWN = 0;
          SUCCESS = 1;
          FAILURE = 2;
        }
        repeated CompletionStatus statuses = 2;
      }
      repeated NotificationRequirement notify = 6;
    }
    repeated Schedule schedules = 4;  
  }
  repeated Environment environments = 1;

  message NotificationChannel {
    string name = 1;

    message EmailNotificationChannel {
      repeated string to = 1;
    }
    message SlackNotificationChannel {
      string webhook_url = 1;
    }
    oneof channel {
      EmailNotificationChannel email = 2;
      SlackNotificationChannel slack = 3;
    }
  }
  repeated NotificationChannel notification_channels = 2;
}

// This is a superset of Schedule.Options.
message RunConfig {
  repeated string actions = 1;
  repeated string tags = 5;
  bool include_dependencies = 3;
  bool include_dependents = 11;
  bool full_refresh = 2;
  int32 timeout_millis = 7;
  bool use_run_cache = 8;

  // For internal use only, will be removed at a later date.
  bool disable_set_metadata = 9;

  reserved 4, 6;
}

message GenerateIndexConfig {
  CompileConfig compile_config = 1;
  repeated string include_paths = 2;
  repeated string definition_paths = 3;

  // Deprecated.
  string return_override = 4;
}

message CompileConfig {
  // Required.
  string project_dir = 1;

  // Project configuration overrides (dataform.json).
  ProjectConfig project_config_override = 3;

  // If supplied, only the compiled form of 'query' will be returned.
  bool compile_single_query = 7;
  string query = 4;

  // Override compilation timeout settings.
  int32 timeout_millis = 6;

  // Deprecated.
  string schema_suffix_override = 2;
  string return_override = 5;
}

message Target {
  string database = 3;
  string schema = 1;
  string name = 2;
}

message BigQueryOptions {
  string partition_by = 1;
  repeated string cluster_by = 2;
  string update_partition_filter = 3;
  map<string, string> labels = 4;
}

message RedshiftOptions {
  string dist_key = 1;
  string dist_style = 2;
  repeated string sort_keys = 3;
  string sort_style = 4;

  bool bind = 5 [deprecated = true];
}

message SnowflakeOptions {
  bool secure = 1;
  bool transient = 2;
  repeated string cluster_by = 3;
}

message SQLDataWarehouseOptions {
  string distribution = 1;
}

message PrestoOptions {
  repeated string partition_by = 3;
}

message GraphErrors {
  repeated CompilationError compilation_errors = 1;
  repeated ValidationError validation_errors = 2 [deprecated = true];
}

// Deprecated.
message ValidationError {
  string action_name = 1;
  string message = 2;
}

message CompilationError {
  string file_name = 1;
  string action_name = 4;
  string message = 2;
  string stack = 3;
}

message QueryEvaluationError {
  string message = 1;
  message ErrorLocation {
    int32 line = 1;
    int32 column = 2;
  }
  // will not be set if error_location can't be determined
  ErrorLocation error_location = 2;
}

message QueryEvaluation {
  enum QueryEvaluationStatus {
    SUCCESS = 0;
    FAILURE = 1;
  }
  QueryEvaluationStatus status = 1;
  QueryEvaluationError error = 2;
  bool incremental = 3;
  string query = 4;
}

message ValidationQuery {
  string query = 1;
  bool incremental = 2;
}

message ActionDescriptor {
  string description = 1;
  // For Operations, 'columns' may be set iff has_output == true.
  // For Assertions, 'columns' will always be empty.
  repeated ColumnDescriptor columns = 2;
  map<string, string> bigquery_labels = 3;
}

message ColumnDescriptor {
  string description = 1;

  // For nested records, the path might look like e.g. ["record", "column"].
  // For simple columns, this will always contain a single entry e.g. ["column"].
  repeated string path = 2;

  string display_name = 3;

  enum DimensionType {
    UNKNOWN_DIMENSION = 0;
    CATEGORY = 1;
    TIMESTAMP = 2;
    NUMBER = 3;
  }
  DimensionType dimension_type = 4;

  enum Aggregation {
    UNKNOWN_AGGREGATION = 0;
    SUM = 1;
    DISTINCT = 2;
    DERIVED = 3;
  }
  Aggregation aggregation = 5;

  string expression = 6;

  repeated string tags = 7;

  // BigQuery specific settings.

  repeated string bigquery_policy_tags = 8;
}

message Table {
  Target target = 4;
  Target canonical_target = 32;

  repeated Target dependency_targets = 27;
  ActionHermeticity hermeticity = 31;
  
  bool disabled = 6;

  string type = 3;
  string query = 5;
  bool protected = 9;

  ActionDescriptor action_descriptor = 24;

  repeated string tags = 23;

  // Incremental only.
  string where = 8 [deprecated = true];
  string incremental_query = 26;
  repeated string unique_key = 30;

  // Pre/post operations.
  repeated string pre_ops = 13;
  repeated string post_ops = 14;
  repeated string incremental_pre_ops = 28;
  repeated string incremental_post_ops = 29;

  // Warehouse specific features.
  RedshiftOptions redshift = 21;
  BigQueryOptions bigquery = 22;
  SnowflakeOptions snowflake = 33;
  SQLDataWarehouseOptions sql_data_warehouse = 25;
  PrestoOptions presto = 34;

  // Generated.
  string file_name = 18;

  // Deprecated.
  repeated string deprecated_parsed_columns = 12 [deprecated = true];
  repeated ValidationError deprecated_validation_errors = 7 [deprecated = true];
  string name = 1 [deprecated = true]; // Use 'target' instead.
  repeated string dependencies = 2 [deprecated = true]; // Use 'dependency_targets' instead.

  reserved 16;
}

message Operation {
  Target target = 3;
  Target canonical_target = 13;

  repeated Target dependency_targets = 11;
  ActionHermeticity hermeticity = 12;
  
  bool disabled = 14;

  repeated string queries = 6;
  bool has_output = 8;
  repeated string tags = 9;

  ActionDescriptor action_descriptor = 10;

  // Generated.
  string file_name = 7;

  // Deprecated.
  string name = 1; // Use 'target' instead.
  repeated string dependencies = 2; // Use 'dependency_targets' instead.

  reserved 4, 5;
}

message Assertion {
  Target target = 8;
  Target canonical_target = 13;

  repeated Target dependency_targets = 11;
  ActionHermeticity hermeticity = 12;
  
  bool disabled = 14;

  string query = 3;

  repeated string tags = 9;

  ActionDescriptor action_descriptor = 10;

  // Only present for auto assertions.
  Target parent_action = 15;
  
  // Generated.
  string file_name = 7;

  // Deprecated.
  string name = 1; // Use 'target' instead.
  repeated string dependencies = 2; // Use 'dependency_targets' instead.

  reserved 4, 5, 6;
}

enum ActionHermeticity {
  UNKNOWN = 0;
  HERMETIC = 1;
  NON_HERMETIC = 2;
}

message Declaration {
  string name = 1;

  Target target = 2;
  Target canonical_target = 5;

  ActionDescriptor action_descriptor = 3;

  // Generated.
  string file_name = 4;
}

message Test {
  string name = 1;

  string test_query = 2;
  string expected_output_query = 3;

  // Generated.
  string file_name = 4;
}

message CompiledGraph {
  ProjectConfig project_config = 4;

  repeated Table tables = 1;
  repeated Operation operations = 2;
  repeated Assertion assertions = 3;
  repeated Declaration declarations = 9;
  repeated Test tests = 8;

  GraphErrors graph_errors = 7;

  string dataform_core_version = 10;

  repeated Target targets = 11;

  reserved 5, 6;
}

message ExecutionTask {
  string type = 1;
  string statement = 2;
}

message ExecutionAction {
  string name = 1;
  Target target = 5;
  string file_name = 8;

  string type = 4;
  string table_type = 6;

  // TODO: Replace this with a dependency_targets field.
  repeated string dependencies = 3;
  repeated Target transitive_inputs = 7;
  ActionHermeticity hermeticity = 10;

  repeated ExecutionTask tasks = 2;

  ActionDescriptor action_descriptor = 9;
}

message WarehouseState {
  repeated TableMetadata tables = 1;

  reserved 2;
}

message ExecutionGraph {
  ProjectConfig project_config = 1;
  RunConfig run_config = 2;
  WarehouseState warehouse_state = 4;
  repeated Target declaration_targets = 5;

  repeated ExecutionAction actions = 3;
}

message Timing {
  int64 start_time_millis = 1;
  int64 end_time_millis = 2;
}

message RunResult {
  enum ExecutionStatus {
    UNKNOWN = 0;
    RUNNING = 1;
    SUCCESSFUL = 2;
    FAILED = 3;
    CANCELLED = 4;
    TIMED_OUT = 5;
  }
  ExecutionStatus status = 1;
  repeated ActionResult actions = 2;
  Timing timing = 3;
}

message ActionResult {
  string name = 1;
  Target target = 5;

  message Input {
    Target target = 1;

    message Metadata {
      int64 last_modified_timestamp_millis = 1;
    }
    // If left unset, metadata for this Input could not be found.
    Metadata metadata = 2;
  }
  repeated Input inputs = 6;

  enum ExecutionStatus {
    UNKNOWN = 0;
    RUNNING = 1;
    SUCCESSFUL = 2;
    FAILED = 3;
    SKIPPED = 4;
    DISABLED = 5;
    CANCELLED = 6;
    CACHE_SKIPPED = 7;
  }
  ExecutionStatus status = 2;

  repeated TaskResult tasks = 3;
  Timing timing = 4;
  // Only set if use_run_cache was set to true.
  int64 post_execution_timestamp_millis = 7;
}


message ExecutionMetadata {
  message BigqueryMetadata {
    string job_id = 1;
    int64 total_bytes_processed = 2;
    int64 total_bytes_billed = 3;  
  }
  BigqueryMetadata bigquery = 1;
}

message TaskResult {
  enum ExecutionStatus {
      UNKNOWN = 0;
      RUNNING = 1;
      SUCCESSFUL = 2;
      FAILED = 3;
      SKIPPED = 4;
      CANCELLED = 5;
  }
  ExecutionStatus status = 1;
  string error_message = 2;
  Timing timing = 3;
  ExecutionMetadata metadata = 4;
}

message TestResult {
  string name = 1;
  bool successful = 2;
  repeated string messages = 3;
}

message Field {

  enum Primitive {
    UNKNOWN = 0;
    INTEGER = 1;
    FLOAT = 2;
    NUMERIC = 5;
    BOOLEAN = 3;
    STRING = 4;
    DATE = 6;
    DATETIME = 7;
    TIMESTAMP = 8;
    TIME = 9;
    BYTES = 10;
    // Semi structured data from Snowflake has no strong schema, and could therefore be anything.
    ANY = 11;
    GEOGRAPHY = 12;
  }

  enum Flag {
    UNKNOWN_FLAG = 0;
    REPEATED = 1;
  }

  string name = 1;
  
  repeated Flag flags = 6;

  oneof type {
    Primitive primitive = 7;
    Fields struct = 3;
  }

  string description = 5;

  // Deprecated.
  repeated string flags_deprecated = 4;

  reserved 2;
}

message Fields {
  repeated Field fields = 1;
}

message TableMetadata {

  enum Type {
    UNKNOWN = 0;
    TABLE = 1;
    VIEW = 2;
  }

  Target target = 1;
  Type type = 6;

  repeated Field fields = 3;
  int64 last_updated_millis = 4;
  string description = 5;
  map<string, string> labels = 7;

  // Deprecated.
  string type_deprecated = 2; // "table" or "view"
}

message PersistedTableMetadata {
  Target target = 1;
  string definition_hash = 2; // sha1 hash of ExectionAction object
  int64 last_updated_millis = 3; // Timestamp of the last modification to this dataset (where that modification happened as a result of a Dataform run).

  message TransitiveInputMetadata {
    Target target = 1;
    int64 last_updated_millis = 2;
  }
  repeated TransitiveInputMetadata transitive_input_tables = 7;
  
  reserved 4, 5, 6;
}
