syntax="proto3";

package dataform;

option java_package = "com.dataform.protos";
option java_outer_classname = "CoreMeta";
option java_multiple_files = true;

message ProjectConfig {
  string warehouse = 1;
  string default_schema = 2;
  string assertion_schema = 5;

  // BigQuery only.
  string gcloud_project_id = 6;
}

message RunConfig {
  repeated string nodes = 1;
  bool include_dependencies = 3;
  bool full_refresh = 2;
  bool carry_on = 4;
}

message CompileConfig {
  // Required.
  string project_dir = 1;

  // Optional overrides for project-level settings.
  string default_schema_override = 2;
  string assertion_schema_override = 3;
}

message Target {
  string schema = 1;
  string name = 2;
}

message BigQueryOptions {
  string partition_by = 1;
}

message RedshiftOptions {
  string dist_key = 1;
  string dist_style = 2;
  repeated string sort_keys = 3;
  string sort_style = 4;
}

message GraphErrors {
  repeated CompilationError compilation_errors = 1;
  repeated ValidationError validation_errors = 2;
}

message ValidationError {
  string node_name = 1;
  string message = 2;
}

message CompilationError {
  string file_name = 1;
  string message = 2;
  string stack = 3;
}

message Table {
  string name = 1;
  repeated string dependencies = 2;
  bool disabled = 6;

  string type = 3;
  Target target = 4;
  string query = 5;
  bool protected = 9;

  map<string, string> fieldDescriptor = 16;

  // Incremental only.
  string where = 8;

  // Pre/post operations.
  repeated string pre_ops = 13;
  repeated string post_ops = 14;

  // Warehouse specific features.
  RedshiftOptions redshift = 21;
  BigQueryOptions bigquery = 22;

  // Generated.
  string file_name = 18;

  // Deprecated.
  repeated string deprecated_parsed_columns = 12;
  repeated ValidationError deprecated_validation_errors = 7;
}

message Operation {
  string name = 1;
  repeated string dependencies = 2;

  Target target = 3;
  repeated string queries = 6;

  // Generated.
  string file_name = 7;

  bool has_output = 8;
}

message Assertion {
  string name = 1;
  repeated string dependencies = 2;

  string query = 3;

  // Generated.
  string file_name = 7;
}

message CompiledGraph {
  ProjectConfig project_config = 4;

  repeated Table tables = 1;
  repeated Operation operations = 2;
  repeated Assertion assertions = 3;

  GraphErrors graph_errors = 7;

  repeated ValidationError deprecated_validation_errors = 5;
  repeated CompilationError deprecated_compilation_errors = 6;
}

message ExecutionTask {
  string type = 1;
  string statement = 2;
}

message ExecutionNode {
  string name = 1;
  repeated string dependencies = 3;
  repeated ExecutionTask tasks = 2;
  string type = 4;
  Target target = 5;
  string table_type = 6;
}

message WarehouseState {
  repeated TableMetadata tables = 1;
}

message ExecutionGraph {
  ProjectConfig project_config = 1;
  RunConfig run_config = 2;
  WarehouseState warehouse_state = 4;

  repeated ExecutionNode nodes = 3;
}

message ExecutedTask {
  ExecutionTask task = 1;

  bool ok = 2;
  bool skipped = 5;
  string error = 3;
}

enum NodeExecutionStatus {
  UNKNOWN_NODE_EXECUTION_STATUS = 0;
  SUCCESSFUL = 1;
  FAILED = 2;
  SKIPPED = 3;
  DISABLED = 4;
}

message ExecutedNode {
  string name = 1;
  // May be empty, indicating that nothing was run as part of this Node.
  repeated ExecutedTask tasks = 2;

  NodeExecutionStatus status = 6;
  int64 execution_time = 5;

  // Deprecated status fields. Prefer using the 'status' field.
  bool deprecated_ok = 3;
  bool deprecated_skipped = 4;
}

// TODO: Instead of returning this as a result of run(...), return an ExecutionGraph
// along with something like a RunStatus message indicating the success/failure of executing
// that graph on the data warehouse.
message ExecutedGraph {
  ProjectConfig project_config = 1;
  RunConfig run_config = 2;
  WarehouseState warehouse_state = 4;

  bool ok = 5;
  repeated ExecutedNode nodes = 3;
}

message Field {
  string name = 1;
  repeated string flags = 4;
  oneof type {
    string primitive = 2;
    Fields struct = 3;
  }
}

message Fields {
  repeated Field fields = 1;
}

message TableMetadata {
  Target target = 1;
  string type = 2; // "table" or "view"
  repeated Field fields = 3;
}
