syntax = "proto3";

package dataform.dataprep;

option java_package = "com.dataform.dataprep.protos";
option java_multiple_files = true;

option go_package = "github.com/dataform-co/dataform/protos/dataform/dataprep";

message DataPreparation {
  repeated DataPreparationNode nodes = 1;
  DataPreparationGenerated generated = 2;
  DataPreparationConfiguration configuration = 3;
}

message DataPreparationNode {
  string id = 1;
  Source source = 2;
  repeated Step steps = 3;
  NodeGenerated generated = 4;
  Destination destination = 5;
}

message DataPreparationConfiguration {
  TableReference error_table = 1;
}

message Source {
  oneof source {
    string node_id = 1;
    TableReference table = 2;
    Join join = 3;
  }
}

message Destination {
  oneof destination {
    TableReference table = 1;
  }
}

message Step {
  string id = 1;
  string description = 2;

  oneof definition {
    ColumnStep column_step = 3;
    FilterStep filter_step = 4;
  }
  StepGenerated generated = 5;
}

message ColumnStep {
  string column_name = 1;
  Expression expression = 2;
}

enum FilterType {
  FILTER_TYPE_UNSPECIFIED = 0;
  ROW_FILTER_KEEP_ROWS = 1;
  VALIDATION = 2;
}

message FilterStep {
  Expression expression = 1;
  optional FilterType filter_type = 2;
}

message Expression {
  oneof expression {
    string sql = 1;
  }
}

message Join {
  string left_node_id = 1;
  string right_node_id = 2;
  JoinType join_type = 3;
  JoinCondition join_condition = 4;
}

enum JoinType {
  JOIN_TYPE_UNSPECIFIED = 0;
  JOIN_TYPE_INNER = 1;
  JOIN_TYPE_FULL_OUTER = 2;
  JOIN_TYPE_LEFT = 3;
  JOIN_TYPE_RIGHT = 4;
}

message JoinCondition {
  oneof condition {
    Expression expression = 1;
    JoinKeys keys = 2;
  }
}

message JoinKeys {
  repeated JoinKey keys = 1;
}

message JoinKey {
  string left_column = 1;
  string right_column = 2;
}

message TableReference {
  string project = 1;
  string dataset = 2;
  string table = 3;
}

message DataPreparationGenerated {
  repeated ValidationError validation_errors = 1;
  optional string location = 2;
}

message NodeGenerated {
  repeated Section sections = 1;
  repeated string sources = 2;
  repeated ValidationError validation_errors = 3;
  Schema output_schema = 4;
  SourceGenerated source_generated = 5;
  DestinationGenerated destination_generated = 6;
}

message Section {
  SectionType type = 1;
  string label = 2;
}

enum SectionType {
  SECTION_TYPE_UNSPECIFIED = 0;
  SECTION_UNPARSEABLE = 1;
  SECTION_SOURCE_TABLE = 2;
  SECTION_SQL = 3;
  SECTION_DESTINATION_TABLE = 4;
  SECTION_JOIN = 5;
}

message SourceGenerated {
  SourceSchema source_schema = 4;
}

message SourceSchema {
  oneof source_schema {
    Schema node_schema = 1;
    Schema table_schema = 2;
    JoinSchema join_schema = 3;
  }
}

message JoinSchema {
  Schema left_schema = 1;
  Schema right_schema = 2;
}

message DestinationGenerated {
  Schema schema = 1;
}

message StepGenerated {
  repeated string source_columns = 1;
  repeated ValidationError validation_errors = 2;
}

message Schema {
  repeated Field field = 1;
}

message Field {
  string name = 1;
  optional string type = 2;
  optional string mode = 3;
  repeated Field fields = 4;
}

message ValidationError {
  ValidationErrorLevel level = 1;
  string description = 2;
}

enum ValidationErrorLevel {
  LEVEL_UNSPECIFIED = 0;
  LEVEL_WARN = 1;
  LEVEL_ERROR = 2;
  LEVEL_FATAL = 3;
}