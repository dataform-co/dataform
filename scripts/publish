#!/bin/bash
set -e

if [ "$(git status --porcelain)" ]; then 
    echo "There are uncommitted changes; aborting." 1>&2
    exit 1
fi

if [ "main" != "$(git branch --show-current)" ]; then 
    echo "Not on the 'main' branch; aborting." 1>&2
    exit 1
fi

# Run all the tests.

bazel test //... --build_tests_only -- -tests/integration:snowflake.spec

VERSION=$(cat version.bzl | grep DF_VERSION | awk '{ print $3 }' | sed "s/\"//g")

TAG=next

# If the version is a normal release (1.2.3) and not pre-release e.g (1.2.3-alpha.1) then publish with the 'latest' tag.
if [[ "$VERSION" =~ [0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    TAG=latest
fi

echo "Publishing as '$TAG' based on version: $VERSION"

bazel run packages/@dataform/cli:package.publish -- --tag=$TAG
bazel run packages/@dataform/core:package.publish -- --tag=$TAG
bazel run cli:push

git tag $VERSION
git push origin $VERSION

docker pull dataformco/dataform:$VERSION
docker tag dataformco/dataform:$VERSION dataformco/dataform:$TAG
docker push dataformco/dataform:$TAG
